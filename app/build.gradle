apply plugin: 'com.android.application'


apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


android {
  //  compileSdkVersion rootProject.android.compileSdkVersion
    compileSdk  rootProject.android.compileSdkVersion
    defaultConfig {
        minSdk rootProject.android.minSdkVersion
        targetSdk rootProject.android.targetSdkVersion
        applicationId rootProject.android.applicationId
//        minSdkVersion rootProject.android.minSdkVersion
//        targetSdkVersion rootProject.android.targetSdkVersion
//        versionCode rootProject.android.versionCode
//        versionName rootProject.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // minSdkVersion 设为 21 或更高版本，系统会默认启用 MultiDex
//        multiDexEnabled true

    }
    buildTypes {
        release {
            /* 移除无用的resource文件 */
            shrinkResources false
            /* 是否开启代码混淆，默认false */
            minifyEnabled false
            /* 混淆规则配置文件 */
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

//   对比下面
//    dataBinding {
//        enabled true
//    }
    buildFeatures {
        dataBinding = true
        // for view binding :
         viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
//    Kotlin快速通过Parcelable在intent间传递对象
    androidExtensions {
        experimental = true
    }
/*
当然想打包时文件重复的问题也可以使用这个选项，常见的就是引入的so库重
exclude 在打包时移除项目中的相关文件，不打入apk文件中*/
    packagingOptions{

    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    implementation project(":testLib")


//
//   implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    implementation 'androidx.appcompat:appcompat:1.2.0'
//    implementation 'androidx.core:core-ktx:1.3.1'
//    implementation 'com.google.android.material:material:1.2.0'
//    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-rc1'
//
//    //协程 核心
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'
//    // optional - support viewmodel-ktx
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
//    // optional - support livedata-ktx
//    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
//    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

 //   implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    // JVM dependency
    // or "kotlin-stdlib-jdk8"
  //  implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.0"

    //序列化
  //  implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"



    //mmkv
 //   implementation 'com.tencent:mmkv-static:1.1.1'




    //DataBinding BR 生产类  跟随Gradle版本
    kapt "com.android.databinding:compiler:3.1.4"

    //Glide  2020 04 28 稳定版本 4.10.0
 //   implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt rootProject.depsLibs.glideKapt



    //最新的Activity
  //  implementation "androidx.activity:activity-ktx:1.2.0-alpha07"


    kapt 'androidx.room:room-compiler:2.2.6'

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'


//    implementation 'com.android.support:multidex:1.0.3'

    kapt rootProject.depsLibs.glideKapt
    //高斯模糊
    implementation 'jp.wasabeef:glide-transformations:4.3.0'
  //  implementation 'cn.student0.manager:repeatmanager:1.0.3'
}
